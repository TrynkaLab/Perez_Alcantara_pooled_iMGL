lead_coloc_var <- find_lead_coloc_variant(focal_gene)
gene_cis_eQTLs
lead_coloc_var
gene_lead_coloc_cis_eQTL <- nominal_eqtl_results %>%
dplyr::select(variant_id, gene, gene_symbol, pval_nominal, slope) %>%
dplyr::filter(gene_symbol == focal_gene) %>%
dplyr::filter(variant_id == lead_coloc_var)
gene_lead_coloc_cis_eQTL
gene_cis_eQTLs <- rbind(gene_cis_eQTLs, gene_lead_coloc_cis_eQTL) %>% unique
rbind(gene_cis_eQTLs, gene_lead_coloc_cis_eQTL)
gene_cis_eQTLs
length(gene_cis_eQTLs$variant_id)
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
#       Step 1.1: if >1 cis-eQTL keep the independent stronger ones
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
if(length(gene_cis_eQTLs$variant_id) > 1){
## Variant pairs in high LD (R^2 >0.2)
variant_pairs_in_LD = variants_in_LD(gene_cis_eQTLs$variant_id)
# 1) first discard all variants in LD with the lead coloc variant
# 2) then discard all variants in LD with the variant with the strongest effect size
# 3) then repeat with the second strongest variant among the remaining and so on ...
if(is.na(lead_coloc_var)){
ordered_eQTLs <- gene_cis_eQTLs %>% arrange(-abs(slope)) %>% dplyr::select(variant_id) %>% unlist %>% as.vector()
}
else{
ordered_eQTLs <- c(lead_coloc_var,
gene_cis_eQTLs %>% filter(!variant_id == lead_coloc_var) %>% arrange(-abs(slope)) %>% dplyr::select(variant_id) %>% unlist %>% as.vector())
}
independent_variants <- gene_cis_eQTLs$variant_id
while(length(ordered_eQTLs)>0){
## Causal/strongest variant
strong_eQTL = ordered_eQTLs[1]
## Correlated variants + strongest
strong_and_cor_variants = variant_pairs_in_LD %>%
filter(SNP1 %in% strong_eQTL | SNP2 %in% strong_eQTL) %>% .[, c("SNP1", "SNP2")] %>% unlist() %>% append(strong_eQTL) %>% unique
## Keep strongest variant and discard the ones correlated with it
cor_variants = strong_and_cor_variants[-which(strong_and_cor_variants == strong_eQTL)]
if(any(cor_variants %in% independent_variants)){
independent_variants <- independent_variants[-which(independent_variants %in% cor_variants)]
}
## Repeat with remaining variants
ordered_eQTLs <- ordered_eQTLs[-which(ordered_eQTLs %in% strong_and_cor_variants)]
}
}
independent_variants = gene_cis_eQTLs$variant_id
independent_variants
gene_indep_cis_eQTLs <- gene_cis_eQTLs %>% filter(variant_id %in% independent_variants)
gene_indep_cis_eQTLs
# ****************************************************************************
#      Step 2: Add all eGenes of included independent stronger cis-eQTL(s)
# ****************************************************************************
indep_cis_eQTLs_eGenes <- nominal_eqtl_results %>%
dplyr::select(variant_id, gene, gene_symbol, pval_nominal, slope) %>%
filter(variant_id %in% independent_variants)
indep_cis_eQTLs_eGenes
gene_indep_cis_eQTLs_with_eGenes = rbind(gene_indep_cis_eQTLs, indep_cis_eQTLs_eGenes) %>% unique
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
#          Step 2.1: exclude highly-correlated genes (r^2 >=0.4)
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
initial_genes_in_model <- gene_indep_cis_eQTLs_with_eGenes$gene_symbol %>% unique()
initial_genes_in_model
if(length(initial_genes_in_model)>1){
## Compute cor between independent cis-eQTL effects for each pair of genes
cors <- gene_pair_cor(initial_genes_in_model)
# heatmap(cors, Rowv = NA, Colv = NA, scale = "none")
## First discard eGenes correlated with focal gene
focal_gene_cor <- cors[focal_gene, ] %>% .[abs(.)>=0.4] %>% names %>% .[!.== focal_gene]
uncorr_eGenes <- initial_genes_in_model[-which(initial_genes_in_model %in% focal_gene_cor)]
remaining_eGenes <- initial_genes_in_model[-which(initial_genes_in_model %in% c(focal_gene_cor, focal_gene))]
## Second, take less corr gene with focal gene and discard its correlated genes
remaining_eGenes <- cors[focal_gene, remaining_eGenes] %>% abs() %>% sort() %>% names
while(length(remaining_eGenes)>0){
## Take less corr gene
gene = remaining_eGenes[1]
corr_genes <- cors[gene, ] %>% .[abs(.)>=0.4] %>% names %>% .[!. == gene]
if(any(corr_genes %in% uncorr_eGenes)){
uncorr_eGenes <- uncorr_eGenes[-which(uncorr_eGenes %in% corr_genes)]
}
remaining_eGenes <- remaining_eGenes[-which(remaining_eGenes %in% c(gene, corr_genes))]
}
# heatmap(cors[uncorr_eGenes, uncorr_eGenes], Rowv = NA, Colv = NA, scale = "none")
}
cors
cors[uncorr_eGenes, uncorr_eGenes]
gene_indep_cis_eQTLs_with_indep_eGenes <- gene_indep_cis_eQTLs_with_eGenes %>% filter(gene_symbol %in% uncorr_eGenes)
gene_indep_cis_eQTLs_with_indep_eGenes
# ****************************************************************************
#          Step 3: Add all signif (p < 10-6) cis-eQTLs x added eGene
# ****************************************************************************
indep_eGenes_signif_cis_eQTLs <- nominal_eqtl_results %>%
dplyr::select(variant_id, gene, gene_symbol, pval_nominal, slope) %>%
filter(gene_symbol %in% gene_indep_cis_eQTLs_with_indep_eGenes$gene_symbol & pval_nominal < 0.000001) %>%
filter(! gene_symbol == focal_gene) # don't add cis-eQTLs for focal gene that were not added in step 1
indep_eGenes_signif_cis_eQTLs
# ****************************************************************************
#                  Step 4: Prun variants in LD (R^2 >= 0.1)
# ****************************************************************************
if(dim(indep_eGenes_signif_cis_eQTLs)[1] > 0){
all_variants <- unique(c(indep_eGenes_signif_cis_eQTLs$variant_id, gene_indep_cis_eQTLs$variant_id))
all_variants_in_LD <- variants_in_LD(all_variants)
## Keep focal gene indep. cis-eQTLs (from Step 1) and discard its corr variants
ordered_final_variants <- unique(c(gene_indep_cis_eQTLs$variant_id, indep_eGenes_signif_cis_eQTLs$variant_id))
independent_final_variants <- ordered_final_variants
while(length(ordered_final_variants)>0){
eQTL = ordered_final_variants[1]
## Variants in LD with cis-eQTL
eQTL_and_cor_variants = all_variants_in_LD %>%
filter(SNP1 %in% eQTL | SNP2 %in% eQTL) %>% .[, c("SNP1", "SNP2")] %>% unlist() %>% append(eQTL) %>% unique
cor_variants = eQTL_and_cor_variants[-which(eQTL_and_cor_variants == eQTL)]
if(any(cor_variants %in% independent_final_variants)){
independent_final_variants <- independent_final_variants[-which(independent_final_variants %in% cor_variants)]
}
## Repeat with remaining variants
ordered_final_variants <- ordered_final_variants[-which(ordered_final_variants %in% eQTL_and_cor_variants)]
}
## Confirm all focal gene cis-eQTLs are included
if(length(which(!gene_indep_cis_eQTLs$variant_id %in% independent_final_variants)) >0){
message("Not all independent cis-eQTLs of focal gene are included in the final model.")
stop()
}
}
independent_final_variants <- gene_indep_cis_eQTLs$variant_id
independent_final_variants
## Subset to final set of independent eQTLs
gene_indep_cis_eQTLs_with_indep_eGenes_signif_cis_eQTLs <- rbind(gene_indep_cis_eQTLs_with_indep_eGenes, indep_eGenes_signif_cis_eQTLs) %>% unique
gene_indep_cis_eQTLs_with_indep_eGenes_signif_cis_eQTLs = gene_indep_cis_eQTLs_with_indep_eGenes_signif_cis_eQTLs %>%
filter(variant_id %in% independent_final_variants)
## Final set of IVs and exposures
final_model = gene_indep_cis_eQTLs_with_indep_eGenes_signif_cis_eQTLs %>%
dplyr::select(variant_id, gene_symbol, slope) %>%
tidyr::pivot_wider(
id_cols = variant_id,
names_from = gene_symbol,
values_from = slope,
values_fill = 0) # 0 effect for eQTLs ns in other genes
final_model
# * gene with lead coloc variant as unique cis-eQTL
mod <- select_IVs_and_exposures(focal_gene = "OTOA")
focal_gene = "VANGL1"
# Select stronger cis-eQTL(s) x gene (with min pval)
gene_cis_eQTLs <- nominal_eqtl_results %>%
dplyr::select(variant_id, gene, gene_symbol, pval_nominal, slope) %>%
dplyr::filter(gene_symbol == focal_gene) %>%
dplyr::slice_min(pval_nominal, na_rm = TRUE)
gene_cis_eQTLs
## Select lead coloc cis-eQTL (if any)
lead_coloc_var <- find_lead_coloc_variant(focal_gene)
lead_coloc_var
focal_gene = "LY86"
# Select stronger cis-eQTL(s) x gene (with min pval)
gene_cis_eQTLs <- nominal_eqtl_results %>%
dplyr::select(variant_id, gene, gene_symbol, pval_nominal, slope) %>%
dplyr::filter(gene_symbol == focal_gene) %>%
dplyr::slice_min(pval_nominal, na_rm = TRUE)
gene_cis_eQTLs
## Select lead coloc cis-eQTL (if any)
lead_coloc_var <- find_lead_coloc_variant(focal_gene)
lead_coloc_var
if(!is.na(lead_coloc_var)){
gene_lead_coloc_cis_eQTL <- nominal_eqtl_results %>%
dplyr::select(variant_id, gene, gene_symbol, pval_nominal, slope) %>%
dplyr::filter(gene_symbol == focal_gene) %>%
dplyr::filter(variant_id == lead_coloc_var)
gene_cis_eQTLs <- rbind(gene_cis_eQTLs, gene_lead_coloc_cis_eQTL) %>% unique
}
gene_cis_eQTLs
gene_lead_coloc_cis_eQTL
# Select stronger cis-eQTL(s) x gene (with min pval)
gene_cis_eQTLs <- nominal_eqtl_results %>%
dplyr::select(variant_id, gene, gene_symbol, pval_nominal, slope) %>%
dplyr::filter(gene_symbol == focal_gene) %>%
dplyr::slice_min(pval_nominal, na_rm = TRUE)
lead_coloc_var %in% gene_cis_eQTLs$variant_id
## Select lead coloc cis-eQTL (if any)
lead_coloc_var <- find_lead_coloc_variant(focal_gene)
if(!is.na(lead_coloc_var)){
gene_lead_coloc_cis_eQTL <- nominal_eqtl_results %>%
dplyr::select(variant_id, gene, gene_symbol, pval_nominal, slope) %>%
dplyr::filter(gene_symbol == focal_gene) %>%
dplyr::filter(variant_id == lead_coloc_var)
gene_cis_eQTLs <- rbind(gene_cis_eQTLs, gene_lead_coloc_cis_eQTL) %>% unique
}
lead_coloc_var
c(lead_coloc_var,
gene_cis_eQTLs %>% filter(!variant_id == lead_coloc_var) %>% arrange(-abs(slope)) %>% dplyr::select(variant_id) %>% unlist %>% as.vector())
## Variant pairs in high LD (R^2 >0.2)
variant_pairs_in_LD = variants_in_LD(gene_cis_eQTLs$variant_id)
variant_pairs_in_LD
ordered_eQTLs <- c(lead_coloc_var,
gene_cis_eQTLs %>% filter(!variant_id == lead_coloc_var) %>% arrange(-abs(slope)) %>% dplyr::select(variant_id) %>% unlist %>% as.vector())
ordered_eQTLs
lead_coloc_var
gene_cis_eQTLs %>% arrange(-abs(slope)) %>% dplyr::select(variant_id)
gene_cis_eQTLs %>% arrange(-abs(slope))
independent_variants <- gene_cis_eQTLs$variant_id
while(length(ordered_eQTLs)>0){
## Causal/strongest variant
strong_eQTL = ordered_eQTLs[1]
## Correlated variants + strongest
strong_and_cor_variants = variant_pairs_in_LD %>%
filter(SNP1 %in% strong_eQTL | SNP2 %in% strong_eQTL) %>% .[, c("SNP1", "SNP2")] %>% unlist() %>% append(strong_eQTL) %>% unique
## Keep strongest variant and discard the ones correlated with it
cor_variants = strong_and_cor_variants[-which(strong_and_cor_variants == strong_eQTL)]
if(any(cor_variants %in% independent_variants)){
independent_variants <- independent_variants[-which(independent_variants %in% cor_variants)]
}
## Repeat with remaining variants
ordered_eQTLs <- ordered_eQTLs[-which(ordered_eQTLs %in% strong_and_cor_variants)]
}
independent_variants
lead_coloc_var %in% independent_variants
(!is.na(lead_coloc_var)) & (!lead_coloc_var %in% independent_variants)
!is.na(lead_coloc_var
)
## Confirm lead coloc variant included
if((!is.na(lead_coloc_var)) & (!lead_coloc_var %in% independent_variants)){
message("Lead coloc variant not included in the set of independent cis-eQTLs for focal gene.")
stop()
}
independent_variants
gene_indep_cis_eQTLs <- gene_cis_eQTLs %>% filter(variant_id %in% independent_variants)
gene_indep_cis_eQTLs
# ****************************************************************************
#      Step 2: Add all eGenes of included independent stronger cis-eQTL(s)
# ****************************************************************************
indep_cis_eQTLs_eGenes <- nominal_eqtl_results %>%
dplyr::select(variant_id, gene, gene_symbol, pval_nominal, slope) %>%
filter(variant_id %in% independent_variants)
indep_cis_eQTLs_eGenes
gene_indep_cis_eQTLs_with_eGenes = rbind(gene_indep_cis_eQTLs, indep_cis_eQTLs_eGenes) %>% unique
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
#          Step 2.1: exclude highly-correlated genes (r^2 >=0.4)
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
initial_genes_in_model <- gene_indep_cis_eQTLs_with_eGenes$gene_symbol %>% unique()
initial_genes_in_model
uncorr_eGenes <- focal_gene
gene_indep_cis_eQTLs_with_indep_eGenes <- gene_indep_cis_eQTLs_with_eGenes %>% filter(gene_symbol %in% uncorr_eGenes)
# ****************************************************************************
#          Step 3: Add all signif (p < 10-6) cis-eQTLs x added eGene
# ****************************************************************************
indep_eGenes_signif_cis_eQTLs <- nominal_eqtl_results %>%
dplyr::select(variant_id, gene, gene_symbol, pval_nominal, slope) %>%
filter(gene_symbol %in% gene_indep_cis_eQTLs_with_indep_eGenes$gene_symbol & pval_nominal < 0.000001) %>%
filter(! gene_symbol == focal_gene) # don't add cis-eQTLs for focal gene that were not added in step 1
indep_eGenes_signif_cis_eQTLs
nominal_eqtl_results %>%
dplyr::select(variant_id, gene, gene_symbol, pval_nominal, slope) %>%
filter(gene_symbol %in% gene_indep_cis_eQTLs_with_indep_eGenes$gene_symbol & pval_nominal < 0.000001)
(dim(indep_eGenes_signif_cis_eQTLs)
)
## Function to define exposures and IVs x focal gene in multivariable model
select_IVs_and_exposures <- function(focal_gene){
# ****************************************************************************
#    Step 1:  Select causal + stonger independent cis-eQTLs of focal gene
# ****************************************************************************
# Select stronger cis-eQTL(s) x gene (with min pval)
gene_cis_eQTLs <- nominal_eqtl_results %>%
dplyr::select(variant_id, gene, gene_symbol, pval_nominal, slope) %>%
dplyr::filter(gene_symbol == focal_gene) %>%
dplyr::slice_min(pval_nominal, na_rm = TRUE)
## Select lead coloc cis-eQTL (if any)
lead_coloc_var <- find_lead_coloc_variant(focal_gene)
if(!is.na(lead_coloc_var)){
gene_lead_coloc_cis_eQTL <- nominal_eqtl_results %>%
dplyr::select(variant_id, gene, gene_symbol, pval_nominal, slope) %>%
dplyr::filter(gene_symbol == focal_gene) %>%
dplyr::filter(variant_id == lead_coloc_var)
gene_cis_eQTLs <- rbind(gene_cis_eQTLs, gene_lead_coloc_cis_eQTL) %>% unique
}
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
#       Step 1.1: if >1 cis-eQTL keep the independent stronger ones
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
if(length(gene_cis_eQTLs$variant_id) > 1){
## Variant pairs in high LD (R^2 >0.2)
variant_pairs_in_LD = variants_in_LD(gene_cis_eQTLs$variant_id)
# 1) first discard all variants in LD with the lead coloc variant
# 2) then discard all variants in LD with the variant with the strongest effect size
# 3) then repeat with the second strongest variant among the remaining and so on ...
if(is.na(lead_coloc_var)){
ordered_eQTLs <- gene_cis_eQTLs %>% arrange(-abs(slope)) %>% dplyr::select(variant_id) %>% unlist %>% as.vector()
}
else{
ordered_eQTLs <- c(lead_coloc_var,
gene_cis_eQTLs %>% filter(!variant_id == lead_coloc_var) %>% arrange(-abs(slope)) %>% dplyr::select(variant_id) %>% unlist %>% as.vector())
}
independent_variants <- gene_cis_eQTLs$variant_id
while(length(ordered_eQTLs)>0){
## Causal/strongest variant
strong_eQTL = ordered_eQTLs[1]
## Correlated variants + strongest
strong_and_cor_variants = variant_pairs_in_LD %>%
filter(SNP1 %in% strong_eQTL | SNP2 %in% strong_eQTL) %>% .[, c("SNP1", "SNP2")] %>% unlist() %>% append(strong_eQTL) %>% unique
## Keep strongest variant and discard the ones correlated with it
cor_variants = strong_and_cor_variants[-which(strong_and_cor_variants == strong_eQTL)]
if(any(cor_variants %in% independent_variants)){
independent_variants <- independent_variants[-which(independent_variants %in% cor_variants)]
}
## Repeat with remaining variants
ordered_eQTLs <- ordered_eQTLs[-which(ordered_eQTLs %in% strong_and_cor_variants)]
}
## Confirm lead coloc variant included
if((!is.na(lead_coloc_var)) & (!lead_coloc_var %in% independent_variants)){
message("Lead coloc variant not included in the set of independent cis-eQTLs for focal gene.")
stop()
}
}
else{
independent_variants = gene_cis_eQTLs$variant_id
}
gene_indep_cis_eQTLs <- gene_cis_eQTLs %>% filter(variant_id %in% independent_variants)
# ****************************************************************************
#      Step 2: Add all eGenes of included independent stronger cis-eQTL(s)
# ****************************************************************************
indep_cis_eQTLs_eGenes <- nominal_eqtl_results %>%
dplyr::select(variant_id, gene, gene_symbol, pval_nominal, slope) %>%
filter(variant_id %in% independent_variants)
gene_indep_cis_eQTLs_with_eGenes = rbind(gene_indep_cis_eQTLs, indep_cis_eQTLs_eGenes) %>% unique
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
#          Step 2.1: exclude highly-correlated genes (r^2 >=0.4)
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
initial_genes_in_model <- gene_indep_cis_eQTLs_with_eGenes$gene_symbol %>% unique()
if(length(initial_genes_in_model)>1){
## Compute cor between independent cis-eQTL effects for each pair of genes
cors <- gene_pair_cor(initial_genes_in_model)
# heatmap(cors, Rowv = NA, Colv = NA, scale = "none")
## First discard eGenes correlated with focal gene
focal_gene_cor <- cors[focal_gene, ] %>% .[abs(.)>=0.4] %>% names %>% .[!.== focal_gene]
uncorr_eGenes <- initial_genes_in_model[-which(initial_genes_in_model %in% focal_gene_cor)]
remaining_eGenes <- initial_genes_in_model[-which(initial_genes_in_model %in% c(focal_gene_cor, focal_gene))]
## Second, take less corr gene with focal gene and discard its correlated genes
remaining_eGenes <- cors[focal_gene, remaining_eGenes] %>% abs() %>% sort() %>% names
while(length(remaining_eGenes)>0){
## Take less corr gene
gene = remaining_eGenes[1]
corr_genes <- cors[gene, ] %>% .[abs(.)>=0.4] %>% names %>% .[!. == gene]
if(any(corr_genes %in% uncorr_eGenes)){
uncorr_eGenes <- uncorr_eGenes[-which(uncorr_eGenes %in% corr_genes)]
}
remaining_eGenes <- remaining_eGenes[-which(remaining_eGenes %in% c(gene, corr_genes))]
}
# heatmap(cors[uncorr_eGenes, uncorr_eGenes], Rowv = NA, Colv = NA, scale = "none")
}
else{
uncorr_eGenes <- focal_gene
}
gene_indep_cis_eQTLs_with_indep_eGenes <- gene_indep_cis_eQTLs_with_eGenes %>% filter(gene_symbol %in% uncorr_eGenes)
# ****************************************************************************
#          Step 3: Add all signif (p < 10-6) cis-eQTLs x added eGene
# ****************************************************************************
indep_eGenes_signif_cis_eQTLs <- nominal_eqtl_results %>%
dplyr::select(variant_id, gene, gene_symbol, pval_nominal, slope) %>%
filter(gene_symbol %in% gene_indep_cis_eQTLs_with_indep_eGenes$gene_symbol & pval_nominal < 0.000001) %>%
filter(! gene_symbol == focal_gene) # don't add cis-eQTLs for focal gene that were not added in step 1
# ****************************************************************************
#                  Step 4: Prun variants in LD (R^2 >= 0.1)
# ****************************************************************************
if(dim(indep_eGenes_signif_cis_eQTLs)[1] > 0){
all_variants <- unique(c(indep_eGenes_signif_cis_eQTLs$variant_id, gene_indep_cis_eQTLs$variant_id))
all_variants_in_LD <- variants_in_LD(all_variants)
## Keep focal gene indep. cis-eQTLs (from Step 1) and discard its corr variants
ordered_final_variants <- unique(c(gene_indep_cis_eQTLs$variant_id, indep_eGenes_signif_cis_eQTLs$variant_id))
independent_final_variants <- ordered_final_variants
while(length(ordered_final_variants)>0){
eQTL = ordered_final_variants[1]
## Variants in LD with cis-eQTL
eQTL_and_cor_variants = all_variants_in_LD %>%
filter(SNP1 %in% eQTL | SNP2 %in% eQTL) %>% .[, c("SNP1", "SNP2")] %>% unlist() %>% append(eQTL) %>% unique
cor_variants = eQTL_and_cor_variants[-which(eQTL_and_cor_variants == eQTL)]
if(any(cor_variants %in% independent_final_variants)){
independent_final_variants <- independent_final_variants[-which(independent_final_variants %in% cor_variants)]
}
## Repeat with remaining variants
ordered_final_variants <- ordered_final_variants[-which(ordered_final_variants %in% eQTL_and_cor_variants)]
}
## Confirm all focal gene cis-eQTLs are included
if(length(which(!gene_indep_cis_eQTLs$variant_id %in% independent_final_variants)) >0){
message("Not all independent cis-eQTLs of focal gene are included in the final model.")
stop()
}
}
else{
independent_final_variants <- gene_indep_cis_eQTLs$variant_id
}
## Subset to final set of independent eQTLs
gene_indep_cis_eQTLs_with_indep_eGenes_signif_cis_eQTLs <- rbind(gene_indep_cis_eQTLs_with_indep_eGenes, indep_eGenes_signif_cis_eQTLs) %>% unique
gene_indep_cis_eQTLs_with_indep_eGenes_signif_cis_eQTLs = gene_indep_cis_eQTLs_with_indep_eGenes_signif_cis_eQTLs %>%
filter(variant_id %in% independent_final_variants)
## Final set of IVs and exposures
final_model = gene_indep_cis_eQTLs_with_indep_eGenes_signif_cis_eQTLs %>%
dplyr::select(variant_id, gene_symbol, slope) %>%
tidyr::pivot_wider(
id_cols = variant_id,
names_from = gene_symbol,
values_from = slope,
values_fill = 0) # 0 effect for eQTLs ns in other genes
## Confirm final set of uncorr genes (with focal gene) and independent cis-eQTLs
if(length(which(!gene_indep_cis_eQTLs$variant_id %in% final_model$variant_id)) >0){
message("Not all independent cis-eQTLs of focal gene are included in the final model.")
stop()
}
if(!focal_gene %in% colnames(final_model)){
message("Focal gene not included in the final model.")
stop()
}
if(!setequal(colnames(final_model)[-1], uncorr_eGenes)){
message("Not all uncorrelated genes included in the final model.")
stop()
}
print(paste0("Final model for ", focal_gene, ": ", dim(final_model)[2]-2, " uncorrelated eGenes as exposures and ",
dim(final_model)[1], " independent cis-eQTLs as IVs"))
return(final_model)
}
# * gene with lead coloc variant and cis-eQTLs
mod <- select_IVs_and_exposures(focal_gene = "LY86")
# * gene with max num of cis-eQTLs
mod <- select_IVs_and_exposures(focal_gene = "CD80")
# * gene with only 1 cis-eQTL
mod <- select_IVs_and_exposures(focal_gene = "A2M")
# * gene with initial cis-eQTLs with many eGenes
mod <- select_IVs_and_exposures(focal_gene = "SAMD11")
focal_gene
focal_gene = "SAMD11"
# Select stronger cis-eQTL(s) x gene (with min pval)
gene_cis_eQTLs <- nominal_eqtl_results %>%
dplyr::select(variant_id, gene, gene_symbol, pval_nominal, slope) %>%
dplyr::filter(gene_symbol == focal_gene) %>%
dplyr::slice_min(pval_nominal, na_rm = TRUE)
## Select lead coloc cis-eQTL (if any)
lead_coloc_var <- find_lead_coloc_variant(focal_gene)
if(!is.na(lead_coloc_var)){
gene_lead_coloc_cis_eQTL <- nominal_eqtl_results %>%
dplyr::select(variant_id, gene, gene_symbol, pval_nominal, slope) %>%
dplyr::filter(gene_symbol == focal_gene) %>%
dplyr::filter(variant_id == lead_coloc_var)
gene_cis_eQTLs <- rbind(gene_cis_eQTLs, gene_lead_coloc_cis_eQTL) %>% unique
}
gene_cis_eQTLs
independent_variants = gene_cis_eQTLs$variant_id
gene_indep_cis_eQTLs <- gene_cis_eQTLs %>% filter(variant_id %in% independent_variants)
# ****************************************************************************
#      Step 2: Add all eGenes of included independent stronger cis-eQTL(s)
# ****************************************************************************
indep_cis_eQTLs_eGenes <- nominal_eqtl_results %>%
dplyr::select(variant_id, gene, gene_symbol, pval_nominal, slope) %>%
filter(variant_id %in% independent_variants)
indep_cis_eQTLs_eGenes
gene_indep_cis_eQTLs_with_eGenes = rbind(gene_indep_cis_eQTLs, indep_cis_eQTLs_eGenes) %>% unique
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
#          Step 2.1: exclude highly-correlated genes (r^2 >=0.4)
# . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
initial_genes_in_model <- gene_indep_cis_eQTLs_with_eGenes$gene_symbol %>% unique()
if(length(initial_genes_in_model)>1){
## Compute cor between independent cis-eQTL effects for each pair of genes
cors <- gene_pair_cor(initial_genes_in_model)
# heatmap(cors, Rowv = NA, Colv = NA, scale = "none")
## First discard eGenes correlated with focal gene
focal_gene_cor <- cors[focal_gene, ] %>% .[abs(.)>=0.4] %>% names %>% .[!.== focal_gene]
uncorr_eGenes <- initial_genes_in_model[-which(initial_genes_in_model %in% focal_gene_cor)]
remaining_eGenes <- initial_genes_in_model[-which(initial_genes_in_model %in% c(focal_gene_cor, focal_gene))]
## Second, take less corr gene with focal gene and discard its correlated genes
remaining_eGenes <- cors[focal_gene, remaining_eGenes] %>% abs() %>% sort() %>% names
while(length(remaining_eGenes)>0){
## Take less corr gene
gene = remaining_eGenes[1]
corr_genes <- cors[gene, ] %>% .[abs(.)>=0.4] %>% names %>% .[!. == gene]
if(any(corr_genes %in% uncorr_eGenes)){
uncorr_eGenes <- uncorr_eGenes[-which(uncorr_eGenes %in% corr_genes)]
}
remaining_eGenes <- remaining_eGenes[-which(remaining_eGenes %in% c(gene, corr_genes))]
}
# heatmap(cors[uncorr_eGenes, uncorr_eGenes], Rowv = NA, Colv = NA, scale = "none")
}
uncorr_eGenes
gene_indep_cis_eQTLs_with_indep_eGenes <- gene_indep_cis_eQTLs_with_eGenes %>% filter(gene_symbol %in% uncorr_eGenes)
# ****************************************************************************
#          Step 3: Add all signif (p < 10-6) cis-eQTLs x added eGene
# ****************************************************************************
indep_eGenes_signif_cis_eQTLs <- nominal_eqtl_results %>%
dplyr::select(variant_id, gene, gene_symbol, pval_nominal, slope) %>%
filter(gene_symbol %in% gene_indep_cis_eQTLs_with_indep_eGenes$gene_symbol & pval_nominal < 0.000001) %>%
filter(! gene_symbol == focal_gene) # don't add cis-eQTLs for focal gene that were not added in step 1
indep_eGenes_signif_cis_eQTLs
# * gene with initial cis-eQTLs with eGenes with many signif eQTLs
mod <- select_IVs_and_exposures(focal_gene = "FTSJ3")
# * gene with initial cis-eQTLs with eGenes with 0 signif eQTLs
mod <- select_IVs_and_exposures(focal_gene = "RPP21")
mod
t = read_csv("/lustre/scratch123/hgi/projects/otar2065/OTAR2065_sc_eQTL/data/results/8.5.eQTL_MR/TWMR/input/tensorQTL_variant_gene.csv")
t
"../../../OTAR2065_sc_eQTL/data/results/tensorqtl/best_results/sum_sizefactorsNorm_log2_scaled_centered_IFN_Not_proliferating_common_500kb_window_tensorQTL_nominal.txt"
outdir
paste("..", "..", "output_data", "09_TWMR_proliferation", "01_IVs_and_exposures_selection", treatment, sep = "/")
## Define dirs
outdir = paste("..", "..", "output_data", "09_TWMR_proliferation", "01_IVs_and_exposures_selection", treatment, sep = "/")
plotdir = paste("..", "..", "plots", "09_TWMR_proliferation", "01_IVs_and_exposures_selection", sep = "/")
dir.create(outdir, recursive = T)
dir.create(plotdir, recursive = T)
paste0(outdir, "/", focal_gene)
paste0(outdir, "/", focal_gene, "_model.Rdata")
gene_output_path
paste0(outdir, "/", focal_gene, "_model.Rdata")
focal_gene
model <- select_IVs_and_exposures(focal_gene)
save(model, file = paste0(outdir, "/", focal_gene, "_model.Rdata"))
load("~/OTAR2065_Daianna/output_data/09_TWMR_proliferation/01_IVs_and_exposures_selection/untreated/SAMD11_model.Rdata")
model
logs_dir = paste("logs", "01_IVs_and_exposures_selection", sep = "/")
err_dir = paste("errors", "01_IVs_and_exposures_selection", sep = "/")
dir.create(logs_dir, recursive = T)
dir.create(err_dir, recursive = T)
logs_dir
reticulate::repl_python()
