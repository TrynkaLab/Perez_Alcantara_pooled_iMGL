#!/usr/bin/env python3
# Snakefile for phagocytosis assay WGS processing 
# snakemake is in /software/teamtrynka/conda/otar2065/bin/snakemake
import os
import numpy as np
CHUNK, = glob_wildcards("../../data/genotypes/full_genotype/genotype_minor_allele_dosage_{chunk}.csv")
NGENE=[i for i in np.arange(1,18589,1)]
COMPARISON = ["line_prop_changes_old_vs_young_premac","line_prop_changes_microglia_premac","line_prop_changes_premac_iPSC"]
rule all:
	input:
		#pqtl_res_lm=expand("../../../data/results/{phenotype}/1.2.proportion_QTL_lm_mean_filtered/prop_QTL_{chunk}.csv",chunk=CHUNK,phenotype=PHENOTYPE),
		skat=expand("../../data/results/2.rare_var_SKAT_WES/{comparison}/{ngene}_deleterious_SKATO_result.RDS",ngene=NGENE,comparison=COMPARISON),

# 
# rule run_pQTL:
# 	input:
# 		phagocytosis_info="../../../data/all_pools_phagocytosis_sample_info.csv",
# 		donor_prop_changes="../../../data/results/{phenotype}/1.check_line_proportions/line_prop_changes_per_well.csv",
# 		genotype_minor_allele_dosage="../../../data/genotypes/full_genotype/genotype_minor_allele_dosage_{chunk}.csv",
# 		eqtl_res="../../../../OTAR2065_sc_eQTL/data/results/tensorqtl/35/sum_sizefactorsNorm_log2_scaled_centered_unique_nominal_snps.csv",
# 		genotype_pc="../../../../OTAR2065_sc_eQTL/data/genotype/plink_genotypes/all_pools.no_outliers.genotype.MAF05.eigenvec"
# 	output:
# 		pqtl_res="../../../data/results/{phenotype}/1.2.proportion_QTL_mixed_models/prop_QTL_{chunk}.csv"
# 	message: "Run QTL analysis in chunks of variants and treatments."
# 	params:
# 		group="-G teamtrynka",
# 		queue="-q normal",
# 		threads="-n 1",
# 		memory="-M4000 -R'span[hosts=1] select[mem>4000] rusage[mem=4000]'",
# 		jobname= "-o ../../../logs/log_run_pQTL.phago.{chunk}.%J.%I",
# 		error="-e ../../../errors/error_run_pQTL.phago.{chunk}.%J.%I"
# 	shell:
# 	 	"""
# 		    set +o pipefail;
# 
# 			# check how many genotype allele dosage files there are and launch that many jobs
# 			Rscript 1.2.proportion_QTL_mixed_models.R \
# 			{input.phagocytosis_info} {input.donor_prop_changes} {input.genotype_minor_allele_dosage} {input.eqtl_res} \
# 			{input.genotype_pc} {output.pqtl_res}
# 
# 
# 		"""
# 
# rule run_pQTL_avg_line_filtered:
# 	input:
# 		phagocytosis_info="../../../data/all_pools_phagocytosis_sample_info.csv",
# 		donor_prop_changes="../../../data/results/{phenotype}/1.check_line_proportions/line_prop_changes_averages_variances_1pct_filtered.csv",
# 		genotype_minor_allele_dosage="../../../data/genotypes/full_genotype/genotype_minor_allele_dosage_{chunk}.csv",
# 		eqtl_res="../../../../OTAR2065_sc_eQTL/data/results/tensorqtl/35/sum_sizefactorsNorm_log2_scaled_centered_unique_nominal_snps.csv",
# 		genotype_pc="../../../../OTAR2065_sc_eQTL/data/genotype/plink_genotypes/all_pools.no_outliers.genotype.MAF05.eigenvec"
# 	output:
# 		pqtl_res="../../../data/results/{phenotype}/1.2.proportion_QTL_lm_mean_filtered/prop_QTL_{chunk}.csv"
# 	message: "Run QTL analysis using mixed models in chunks of variants and treatments - averages per pool and prop filtered."
# 	params:
# 		group="-G teamtrynka",
# 		queue="-q normal",
# 		threads="-n 1",
# 		memory="-M4000 -R'span[hosts=1] select[mem>4000] rusage[mem=4000]'",
# 		jobname= "-o ../../logs/log_run_pQTL_avg_line_filtered.{chunk}.%J.%I",
# 		error="-e ../../errors/error_run_pQTL_avg_line_filtered.{chunk}.%J.%I"
# 	shell:
# 	 	"""
# 		        set +o pipefail;
# 
# 			# check how many genotype allele dosage files there are and launch that many jobs
# 			Rscript 1.2.proportion_QTL_lm_mean_filtered.R \
# 			{input.phagocytosis_info} {input.donor_prop_changes} {input.genotype_minor_allele_dosage} {input.eqtl_res} \
# 			{input.genotype_pc} {output.pqtl_res}
# 
# 		"""
# rule files_for_regenie:
# 	input:
# 		sample_info="../../../data/all_pools_phagocytosis_sample_info.csv",
# 		donor_prop_changes="../../../data/results/{phenotype}/1.check_line_proportions/line_prop_changes_averages_variances_1pct_filtered.csv",
# 		genotype_pc="../../../../OTAR2065_sc_eQTL/data/genotype/plink_genotypes/all_pools.no_outliers.genotype.MAF05.eigenvec",
# 		genotype="../../../data/genotypes/full_genotype/microglia_samples.GRCh38.filtered.no_outliers.vcf.gz"
# 	output:
# 		regenie_pheno_file="../../../data/results/{phenotype}/1.3.data_for_regenie/phenotype_for_regenie.txt",
# 		regenie_covariate_file="../../../data/results/{phenotype}/1.3.data_for_regenie/covariates_for_regenie.txt",
# 		genotype="../../../data/results/{phenotype}/regenie_prop_QTL/fit/all_pools.no_outliers.genotype.MAF05.highest.imputation.sorted.bed"
# 	message: "Creating input files for regenie."
# 	params:
# 		group="-G teamtrynka",
# 		queue="-q normal",
# 		threads="-n 32",
# 		memory="-M50000 -R'span[hosts=1] select[mem>50000] rusage[mem=50000]'",
# 		jobname= "-o ../../logs/log_files_for_regenie.%J.%I",
# 		error="-e ../../errors/error_files_for_regenie.%J.%I",
# 		donor_blacklist = "letw_5,lizq_3,zaie_1,romx_2,sebn_4,seru_7,qonc_2,boqx_2,garx_2,sojd_3,yoch_6,sh5y5y"
# 	shell:
# 	 	"""
# 		set +o pipefail;
# 		Rscript 1.3.prepare_data_for_regenie.R {input.sample_info} \
# 		{input.donor_prop_changes} {input.genotype_pc} {output.regenie_pheno_file} {output.regenie_covariate_file} {params.donor_blacklist}
# 
# 		# Run PLINK
# 		 # subset with higher imputation quality for step1
# 	      bcftools filter -e 'INFO/INFO<=0.95' -Oz \
# 		  -o ../../../data/results/{wildcards.phenotype}/regenie_prop_QTL/fit/tmp.vcf.gz \
# 		  {input.genotype}
# 		  plink2 --vcf ../../../data/results/{wildcards.phenotype}/regenie_prop_QTL/fit/tmp.vcf.gz \
#   			--max-alleles 2 \
#   			--allow-extra-chr --chr 1-22 \
#   			--make-bed \
#   			--out ../../../data/results/{wildcards.phenotype}/regenie_prop_QTL/fit/tmp
# 		plink2 --bfile ../../../data/results/{wildcards.phenotype}/regenie_prop_QTL/fit/tmp \
# 			--make-pgen --sort-vars n \
# 			--out ../../data/results/regenie_prop_QTL/fit/tmp2
# 
# 			plink2 --pfile ../../../data/results/{wildcards.phenotype}/regenie_prop_QTL/fit/tmp2 \
# 			--make-bed --out ../../../data/results/{wildcards.phenotype}/regenie_prop_QTL/fit/all_pools.no_outliers.genotype.MAF05.highest.imputation.sorted
# 
# 		"""
# rule run_pQTL_regenie:
# 	input:
# 		regenie_pheno_file="../../../data/results/{phenotype}/1.3.data_for_regenie/phenotype_for_regenie.txt",
# 		regenie_covariate_file="../../../data/results/{phenotype}/1.3.data_for_regenie/covariates_for_regenie.txt",
# 		genotype="../../../../OTAR2065_sc_eQTL/data/genotype/plink_genotypes/all_pools.no_outliers.genotype.MAF05.bed",
# 		small_genotype="../../../data/results/{phenotype}/regenie_prop_QTL/fit/all_pools.no_outliers.genotype.MAF05.highest.imputation.sorted.bed"
# 	output:
# 		regenie_pqtl_res="../../../data/results/{phenotype}/regenie_prop_QTL/migration_regenie_out_Untreated.regenie"
# 	message: "Run QTL analysis using regenie."
# 	params:
# 		group="-G teamtrynka",
# 		queue="-q normal",
# 		threads="-n 32",
# 		memory="-M50000 -R'span[hosts=1] select[mem>50000] rusage[mem=50000]'",
# 		jobname= "-o ../../logs/log_run_pQTL_regenie.%J.%I",
# 		error="-e ../../errors/error_run_pQTL_regenie.%J.%I"
# 	shell:
# 	 	"""
# 		        set +o pipefail;
# 
# 			# We recommend to use a smaller set in step 1, which should be sufficient to capture genome-wide polygenic effects.
# 			/software/teamtrynka/regenie/regenie_v3.0.3.gz_x86_64_Linux --step 1 \
# 			--bed {input.small_genotype} \
# 			--phenoFile {input.regenie_pheno_file} \
# 			--covarFile {input.regenie_covariate_file} \
# 			--bsize 100 \
# 			--covarColList pool,sex \
# 			--catCovarList pool,sex \
# 			--out ../../data/results/regenie_prop_QTL/fit/
# 
# 			/software/teamtrynka/regenie/regenie_v3.0.3.gz_x86_64_Linux --step 2 \
# 			--bed {input.genotype} \
# 			--phenoFile {input.regenie_pheno_file} \
# 			--covarFile {input.regenie_covariate_file}\
# 			--covarColList pool,sex \
# 			--catCovarList pool,sex \
# 			--bsize 200 \
# 			--pThresh 0.05 \
# 			--pred ../../data/results/regenie_prop_QTL/fit/_pred.list \
# 			--out ../../data/results/regenie_prop_QTL/migration_regenie_out
# 
# 		"""
# rule run_pQTL_regenie_gene_tests:
# 	input:
# 		regenie_pheno_file="../../data/results/1.3.data_for_regenie/phenotype_for_regenie.txt",
# 		regenie_covariate_file="../../data/results/1.3.data_for_regenie/covariates_for_regenie.txt",
# 		genotype="../../data/results/regenie_prop_QTL/fit/all_pools.genotype.MAF05.sorted",
# 		small_genotype="../../data/results/regenie_prop_QTL/fit/all_pools.genotype.MAF01.highest.imputation.sorted.bed"
# 	output:
# 		regenie_pqtl_res="../../data/results/regenie_prop_QTL/migration_regenie_out__Untreated.regenie"
# 	message: "Run QTL analysis using regenie."
# 	params:
# 		group="-G teamtrynka",
# 		queue="-q normal",
# 		threads="-n 32",
# 		memory="-M50000 -R'span[hosts=1] select[mem>50000] rusage[mem=50000]'",
# 		jobname= "-o ../../logs/log_run_pQTL_regenie_gene_tests.%J.%I",
# 		error="-e ../../errors/error_run_pQTL_regenie_gene_tests.%J.%I"
# 	shell:
# 	 	"""
# 		        set +o pipefail;
# 
# 			# We recommend to use a smaller set in step 1, which should be sufficient to capture genome-wide polygenic effects.
# 			/software/teamtrynka/regenie/regenie_v3.0.3.gz_x86_64_Linux --step 1 \
# 			--bed {input.small_genotype} \
# 			--phenoFile {input.regenie_pheno_file} \
# 			--covarFile {input.regenie_covariate_file} \
# 			--bsize 100 \
# 			--covarColList pool,sex \
# 			--catCovarList pool,sex \
# 			--out ../../data/results/regenie_prop_QTL/fit/
# 
# 			/software/teamtrynka/regenie/regenie_v3.0.3.gz_x86_64_Linux --step 2 \
# 			--bed {input.genotype} \
# 			--phenoFile {input.regenie_pheno_file} \
# 			--covarFile {input.regenie_covariate_file}\
# 			--covarColList pool,sex \
# 			--catCovarList pool,sex \
# 			--bsize 200 \
# 			--pThresh 0.05 \
# 			--pred ../../data/results/regenie_prop_QTL/fit/_pred.list \
# 			--out ../../data/results/regenie_prop_QTL/migration_regenie_out_
# 
# 		"""

rule run_SKATO_WES:
  input:
    WES_missense_del_gt_path ="../../../hipsci_genotype_processing/data/WES/VEP/missense_clean_GRCh38.vcf.gz",
    WES_missense_del_cleaninfo_path ="../../../hipsci_genotype_processing/data/WES/VEP/missense_clean_GRCh38.txt",
    line_prop_changes_path = "../../data/results/1.2.scale_proliferation/{comparison}.csv",
    genotype_pc_path = "../../../OTAR2065_sc_eQTL/data/genotype/plink_genotypes/all_pools.no_outliers.genotype.MAF05.eigenvec",
    line_info_path="../../../OTAR2065_differentiation_efficiency/data/donor_metadata_complete_with_imputed_sex.csv"
  output:
    SKAT_res = "../../data/results/2.rare_var_SKAT_WES/{comparison}/{ngene}_deleterious_SKATO_result.RDS"
  message: "Running SKATO on WES data."
  envmodules: "HGI/softpack/groups/otar2065/otar2065_9/40"
  params:
    group= "-G teamtrynka",
    queue="-q normal",
    threads="-n 1",
    memory="-M7000 -R'span[hosts=1] select[mem>7000] rusage[mem=7000]'",
    jobname= "-o ../../logs/log_run_SKATO_WES.{ngene}.%J.%I",
    error="-e ../../errors/error_run_SKATO_WES.{ngene}.%J.%I",
    output_directory = "../../data/results/2.rare_var_SKAT_WES/"
  shell:
        """
        set +o pipefail;
        Rscript 2.rare_var_SKAT_WES.R {params.output_directory} \
        {input.WES_missense_del_gt_path} {input.WES_missense_del_cleaninfo_path} \
        {input.line_prop_changes_path} {input.genotype_pc_path} {input.line_info_path} \
        {wildcards.ngene}
        """


