library(GenomicRanges)
devtools::install_github("stephenturner/annotables")
120/130
12/13
ibrary(patchwork)
library(patchwork)
library(tidyverse)
library(pheatmap)
library(ggrepel)
outDir = "../../../data/check_kinship_new_lines/"
dir.create(outDir)
kinship = read.table("../../../data/check_kinship_new_lines/kinship/tocheck.genotype.MAF01.hg38.king")
setwd("~/Library/CloudStorage/GoogleDrive-ma23@sanger.ac.uk/My Drive/server/hipsci_genotype_processing/code/hipsci_genotype_processing/check_kinship_new_lines")
library(patchwork)
library(tidyverse)
library(pheatmap)
library(ggrepel)
outDir = "../../../data/check_kinship_new_lines/"
dir.create(outDir)
kinship = read.table("../../../data/check_kinship_new_lines/kinship/tocheck.genotype.MAF01.hg38.king")
library(patchwork)
library(tidyverse)
library(pheatmap)
library(ggrepel)
outDir = "../../../data/check_kinship_new_lines/"
dir.create(outDir)
kinship = read.table("../../../data/check_kinship_new_lines/kinship/all_pools.genotype.MAF01.hg38.king")
id = read.table("../../../data/check_kinship_new_lines/kinship/all_pools.genotype.MAF01.hg38.king.id")
colnames(kinship) = id$V1
rownames(kinship) = id$V1
annotation=data.frame(geno_or_wgs=c(rep("genotyped",nrow(kinship)-3),rep("WGS",3)))
rownames(annotation) = colnames(kinship)
pdf(file =  paste0(outDir,"/kinship.pdf"),width = 30, height = 30)
p = pheatmap::pheatmap(kinship,
annotation_col = annotation,
cutree_cols = 2,
annotation_legend=FALSE)
p
dev.off()
# plot only last 30 lines
kinship2=kinship[c(87,(nrow(kinship)-29):nrow(kinship)), # 87 is kolf_2
c(87,(nrow(kinship)-29):nrow(kinship))]
annotation2 = data.frame(geno_or_wgs=annotation[c(87,(nrow(kinship)-29):nrow(kinship)),])
rownames(annotation2)=rownames(kinship2)
pdf(file =  paste0(outDir,"/kinship_31lines.pdf"),width = 12, height = 10)
p = pheatmap::pheatmap(kinship2,
annotation_col = annotation2,
annotation_legend=FALSE)
p
dev.off()
kinship_long = read.table("../../../data/check_kinship_new_lines/kinship/all_pools.genotype.MAF01.hg38.kin0")
kinship_long %>%
dplyr::filter(V1 == "iukl_1" & V2 == "curn_3")
# they are no longer highly related after correct pipeline, despite different genotyping (WGS) batch from the rest
# PCA
eigen =read.table("../../../data/check_kinship_new_lines/genotype/plink_genotypes/all_pools.genotype.MAF05.eigenvec")
eigen =read.table("../../../data/check_kinship_new_lines/genotype/all_pools.1kgenomes.genotype.MAF05.eigenvec")
head(eigen)
eigen =read.table("../../../data/check_kinship_new_lines/genotype/all_pools.genotype.MAF05.eigenvec")
values =read.table("../../../data/check_kinship_new_lines/genotype/all_pools.genotype.MAF05.eigenvec")
eigen = eigen[,-1]
colnames(eigen) = c("line",paste0("PC",1:60))
pdf(file =  paste0(outDir,"/genotypePC1_2.pdf"),width = 8, height = 8)
p = ggplot(eigen,aes(x=PC1,y=PC2,label=line)) +
geom_point() +
ggrepel::geom_text_repel()+
theme_minimal() +
xlab(paste0("PC1: ",round((values$V1[1]/sum(values$V1))*100,2),"% variance")) +
ylab(paste0("PC1: ",round((values$V1[2]/sum(values$V1))*100,2),"% variance")) +
ggtitle("PCA plot of genotypes", subtitle = "no clones, LD-pruned")
pdf(file =  paste0(outDir,"/genotypePC1_2.pdf"),width = 8, height = 8)
p = ggplot(eigen,aes(x=PC1,y=PC2,label=line)) +
geom_point() +
ggrepel::geom_text_repel()+
theme_minimal() +
xlab(paste0("PC1: ",round((values$V1[1]/sum(values$V1))*100,2),"% variance")) +
ylab(paste0("PC1: ",round((values$V1[2]/sum(values$V1))*100,2),"% variance")) +
ggtitle("PCA plot of genotypes", subtitle = "no clones, LD-pruned")
head(values)
values =read.table("../../../data/check_kinship_new_lines/genotype/all_pools.genotype.MAF05.eigenval")
pdf(file =  paste0(outDir,"/genotypePC1_2.pdf"),width = 8, height = 8)
p = ggplot(eigen,aes(x=PC1,y=PC2,label=line)) +
geom_point() +
ggrepel::geom_text_repel()+
theme_minimal() +
xlab(paste0("PC1: ",round((values$V1[1]/sum(values$V1))*100,2),"% variance")) +
ylab(paste0("PC1: ",round((values$V1[2]/sum(values$V1))*100,2),"% variance")) +
ggtitle("PCA plot of genotypes", subtitle = "no clones, LD-pruned")
p
dev.off()
pdf(file =  paste0(outDir,"/genotypePC2_3.pdf"),width = 8, height = 8)
p = ggplot(eigen,aes(x=PC3,y=PC2,label=line)) +
geom_point() +
ggrepel::geom_text_repel() +
theme_minimal() +
xlab(paste0("PC3: ",round((values$V1[3]/sum(values$V1))*100,2),"% variance")) +
ylab(paste0("PC2: ",round((values$V1[2]/sum(values$V1))*100,2),"% variance")) +
ggtitle("PCA plot of genotypes", subtitle = "no clones, LD-pruned")
p
dev.off()
pdf(file =  paste0(outDir,"/genotypePC3_4.pdf"),width = 8, height = 8)
p = ggplot(eigen,aes(x=PC3,y=PC4,label=line)) +
geom_point() +
ggrepel::geom_text_repel() +
theme_minimal() +
xlab(paste0("PC3: ",round((values$V1[3]/sum(values$V1))*100,2),"% variance")) +
ylab(paste0("PC4: ",round((values$V1[4]/sum(values$V1))*100,2),"% variance")) +
ggtitle("PCA plot of genotypes", subtitle = "no clones, LD-pruned")
p
dev.off()
library(patchwork)
library(tidyverse)
library(pheatmap)
library(ggrepel)
outDir = "../../../data/check_kinship_new_lines/"
dir.create(outDir)
kinship = read.table("../../../data/check_kinship_new_lines/kinship/all_pools.genotype.MAF01.hg38.king")
id = read.table("../../../data/check_kinship_new_lines/kinship/all_pools.genotype.MAF01.hg38.king.id")
colnames(kinship) = id$V1
rownames(kinship) = id$V1
annotation=data.frame(geno_or_wgs=c(rep("genotyped",nrow(kinship)-3),rep("WGS",3)))
rownames(annotation) = colnames(kinship)
pdf(file =  paste0(outDir,"/kinship.pdf"),width = 30, height = 30)
p = pheatmap::pheatmap(kinship,
annotation_col = annotation,
cutree_cols = 2,
annotation_legend=FALSE)
p
dev.off()
# plot only last 30 lines
kinship2=kinship[c(87,(nrow(kinship)-29):nrow(kinship)), # 87 is kolf_2
c(87,(nrow(kinship)-29):nrow(kinship))]
annotation2 = data.frame(geno_or_wgs=annotation[c(87,(nrow(kinship)-29):nrow(kinship)),])
rownames(annotation2)=rownames(kinship2)
pdf(file =  paste0(outDir,"/kinship_31lines.pdf"),width = 12, height = 10)
p = pheatmap::pheatmap(kinship2,
annotation_col = annotation2,
annotation_legend=FALSE)
p
dev.off()
kinship_long = read.table("../../../data/check_kinship_new_lines/kinship/all_pools.genotype.MAF01.hg38.kin0")
kinship_long %>%
dplyr::filter(V1 == "iukl_1" & V2 == "curn_3")
kinship = read.table("../../../data/check_kinship_new_lines/kinship/all_pools.genotype.MAF01.hg38.king")
id = read.table("../../../data/check_kinship_new_lines/kinship/all_pools.genotype.MAF01.hg38.king.id")
kinship
id
colnames(kinship) = id$V1
rownames(kinship) = id$V1
annotation=data.frame(geno_or_wgs=c(rep("genotyped",nrow(kinship)-3),rep("WGS",3)))
rownames(annotation) = colnames(kinship)
pdf(file =  paste0(outDir,"/kinship.pdf"),width = 30, height = 30)
p = pheatmap::pheatmap(kinship,
# annotation_col = annotation,
cutree_cols = 2,
annotation_legend=FALSE)
p
dev.off()
ncol(kinship)
nrow(kinship)
head(kinship)
tail(kinship)
# plot only last 30 lines
kinship2=kinship[c(220,(nrow(kinship)-29):nrow(kinship)),
c(220,(nrow(kinship)-29):nrow(kinship))]
annotation2 = data.frame(geno_or_wgs=annotation[c(220,(nrow(kinship)-29):nrow(kinship)),])
kinship2
pdf(file =  paste0(outDir,"/kinship_31lines.pdf"),width = 12, height = 10)
p = pheatmap::pheatmap(kinship2,
annotation_col = annotation2,
annotation_legend=FALSE)
p
dev.off()
kinship_long = read.table("../../../data/check_kinship_new_lines/kinship/all_pools.genotype.MAF01.hg38.kin0")
kinship_long
kinship
unique(colnames(kinship))
251-14
# plotting kinship
# and genotype PCs
library(patchwork)
library(tidyverse)
library(pheatmap)
library(ggrepel)
outDir = "../../../data/check_kinship_new_lines/"
dir.create(outDir)
kinship = read.table("../../../data/check_kinship_new_lines/kinship/all_pools.genotype.MAF01.hg38.king")
id = read.table("../../../data/check_kinship_new_lines/kinship/all_pools.genotype.MAF01.hg38.king.id")
colnames(kinship) = id$V1
rownames(kinship) = id$V1
annotation=data.frame(geno_or_wgs=c(rep("genotyped",nrow(kinship)-3),rep("WGS",3)))
rownames(annotation) = colnames(kinship)
pdf(file =  paste0(outDir,"/kinship.pdf"),width = 30, height = 30)
p = pheatmap::pheatmap(kinship,
# annotation_col = annotation,
cutree_cols = 2,
annotation_legend=FALSE)
p
dev.off()
# plot only last 30 lines
kinship2=kinship[c(220,(nrow(kinship)-29):nrow(kinship)),
c(220,(nrow(kinship)-29):nrow(kinship))]
annotation2 = data.frame(geno_or_wgs=annotation[c(220,(nrow(kinship)-29):nrow(kinship)),])
rownames(annotation2)=rownames(kinship2)
pdf(file =  paste0(outDir,"/kinship_31lines.pdf"),width = 12, height = 10)
p = pheatmap::pheatmap(kinship2,
annotation_col = annotation2,
annotation_legend=FALSE)
p
dev.off()
kinship_long = read.table("../../../data/check_kinship_new_lines/kinship/all_pools.genotype.MAF01.hg38.kin0")
kinship_long %>%
dplyr::filter(V1 == "iukl_1" & V2 == "curn_3")
# they are no longer highly related after correct pipeline, despite different genotyping (WGS) batch from the rest
# PCA
eigen =read.table("../../../data/check_kinship_new_lines/genotype/all_pools.genotype.MAF05.eigenvec")
values =read.table("../../../data/check_kinship_new_lines/genotype/all_pools.genotype.MAF05.eigenval")
eigen = eigen[,-1]
colnames(eigen) = c("line",paste0("PC",1:60))
pdf(file =  paste0(outDir,"/genotypePC1_2.pdf"),width = 8, height = 8)
p = ggplot(eigen,aes(x=PC1,y=PC2,label=line)) +
geom_point() +
ggrepel::geom_text_repel()+
theme_minimal() +
xlab(paste0("PC1: ",round((values$V1[1]/sum(values$V1))*100,2),"% variance")) +
ylab(paste0("PC1: ",round((values$V1[2]/sum(values$V1))*100,2),"% variance")) +
ggtitle("PCA plot of genotypes", subtitle = "no clones, LD-pruned")
p
dev.off()
pdf(file =  paste0(outDir,"/genotypePC2_3.pdf"),width = 8, height = 8)
p = ggplot(eigen,aes(x=PC3,y=PC2,label=line)) +
geom_point() +
ggrepel::geom_text_repel() +
theme_minimal() +
xlab(paste0("PC3: ",round((values$V1[3]/sum(values$V1))*100,2),"% variance")) +
ylab(paste0("PC2: ",round((values$V1[2]/sum(values$V1))*100,2),"% variance")) +
ggtitle("PCA plot of genotypes", subtitle = "no clones, LD-pruned")
p
dev.off()
pdf(file =  paste0(outDir,"/genotypePC3_4.pdf"),width = 8, height = 8)
p = ggplot(eigen,aes(x=PC3,y=PC4,label=line)) +
geom_point() +
ggrepel::geom_text_repel() +
theme_minimal() +
xlab(paste0("PC3: ",round((values$V1[3]/sum(values$V1))*100,2),"% variance")) +
ylab(paste0("PC4: ",round((values$V1[4]/sum(values$V1))*100,2),"% variance")) +
ggtitle("PCA plot of genotypes", subtitle = "no clones, LD-pruned")
p
dev.off()
